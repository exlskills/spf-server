<!-- Libs JS -->
<script src="/learn-en/assets/libs/spfjs/spf.js"></script>
<script>
    spf.init();
</script>
<script src="/learn-en/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="/learn-en/assets/libs/chart.js/dist/Chart.min.js"></script>
<script src="/learn-en/assets/libs/chart.js/Chart.extension.min.js"></script>
<script src="/learn-en/assets/libs/highlight/highlight.pack.min.js"></script>
<script src="/learn-en/assets/libs/flatpickr/dist/flatpickr.min.js"></script>
<script src="/learn-en/assets/libs/jquery-mask-plugin/dist/jquery.mask.min.js"></script>
<script src="/learn-en/assets/libs/list.js/dist/list.min.js"></script>
<script src="/learn-en/assets/libs/quill/dist/quill.min.js"></script>
<script src="/learn-en/assets/libs/dropzone/dist/min/dropzone.min.js"></script>
<script src="/learn-en/assets/libs/select2/dist/js/select2.min.js"></script>
<script src="/learn-en/assets/libs/toastr/toastr.min.js"></script>
<script src="/learn-en/assets/libs/moment/moment.min.js"></script>
<script src="/learn-en/assets/libs/moment-timezone/moment-timezone-with-data-2012-2022.min.js"></script>
<script src="https://unpkg.com/nprogress@0.2.0/nprogress.js"></script>

<!-- Theme JS -->
<script src="/learn-en/assets/js/theme.min.js"></script>

<script>
    NProgress.configure({ showSpinner: false });
    NProgress.configure({ trickleSpeed: 75 });
    $(document).on("spfclick", function() {
        // Show progress bar
        NProgress.start();
    });

    $(document).on("spfrequest", function() {
        // Increment progress as request is made
        NProgress.inc();
    });

    $(document).on("spfprocess", function() {
        // Set progress bar width to 100%
        NProgress.done();
    });

    function setupCodeHLJS() {
        $("#course-card-body pre code").toggleClass("hljs");
    }

    $(document).on("spfdone", function() {
        // Finish request and remove progress bar
        NProgress.remove();
        setupCodeHLJS();
    });

    setupCodeHLJS();
</script>
<script>
    $.postJSON = function(url, data, success, error) {
        if (typeof data !== 'string') {
            data = JSON.stringify(data);
        }
        $.ajax({
            url : url,
            type: "post",
            data: data,
            dataType: "json",
            contentType: "application/json",
            success: success,
            error: error,
            xhrFields: {
                withCredentials: true
            },
            crossDomain: true
        });
    }
</script>
<script>
    $('.user-logout-btn').click(function(e) {
      e.preventDefault();
      $.postJSON('{{config.authAPIBaseURL}}/me/logout', {}, function(resp) {
        window.location.href = '{{{config.logoutURL}}}';
      });
    })
</script>
<script>
    function refreshJWT(callback, errorCallback) {
        $.ajax({
            url : '{{config.authAPIBaseURL}}/auth/jwt-refresh?'+(new Date()).getTime(),
            type: "get",
            success: callback,
            error: errorCallback,
            xhrFields: {
                withCredentials: true
            },
            crossDomain: true
        });
    }
</script>
<script>
    $(function() {
        var modalIds = ['modalManageCoins', 'modalCheckout'];
        modalIds.forEach(function(id) {
            $('#'+id).on('hide.bs.modal', function() {
                window.location.hash = '';
            });
        });
        function showModalsWhenHashEq() {
            modalIds.forEach(function(id) {
                if (window.location.hash.indexOf('#!'+id) > -1) {
                    $('#'+id).modal('show');
                }
            });
        }
        $(window).on('hashchange', function() {
            showModalsWhenHashEq();
        });
        showModalsWhenHashEq();
    });
    $(function() {
        $('[data-tooltip="true"]').tooltip();
    });
</script>
<script>
    $(function() {
        if (!window.localStorage.toastOnLoad || window.localStorage.toastOnLoad === "") {
            return;
        }
        var t = JSON.parse(window.localStorage.toastOnLoad);
        switch (t.intent) {
            case 'error':
                toastr.error(t.message, t.title);
                break;
            case 'warning':
                toastr.warning(t.message, t.title);
                break;
            case 'success':
                toastr.success(t.message, t.title);
                break;
            default:
                toastr.info(t.message, t.title);
                break;
        }
        window.localStorage.removeItem('toastOnLoad');
    })
</script>